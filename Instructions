Steps to set up Raspberry pi environment:
Download Raspbian Stretch with Desktop zip file: https://www.raspberrypi.org/downloads/raspbian/
Unzip files and use an image burner software to burn the .img file onto a microSD card
When finished burning put microSD into Raspberry Pi, and plug in peripherals to the Pi, usually you'll need a mouse, monitor (HDMI), keyboard and if older Pi is used a USB wifi dongle as well as the camera module for the pi
With all peripherals plugged in, power the pi using a microUSB cable preferably through a wall charger. You should see the Pi boot up on the monitor
Follow instructions here:  https://projects.raspberrypi.org/en/projects/getting-started-with-picamera  (go to the Connect the Camera Module tab)
to ensure you plug the camera in correctly and also enable the camera module when the Pi has booted. DO NOT plug or unplug the camera while the Pi is on.

Next you will want to connect your Raspberry pi to the internet, in the upper right corner there should be a taskbar with icons similar to windows, click on the one that looks like a wireless symbol and log onto wifi, or connect an ethernet cable to the Pi, without internet you cannot download the necessary files. 

Now with internet you will want to open up a terminal window (shortcut ctrl+alt+t) on the Pi, you will use this to install necessary packages, type into the terminal the following commands:

sudo apt-get update
sudo apt-get upgrade
sudo apt-get install git
sudo apt-get install python-pip
sudo pip install pynput
git clone https://github.com/wlawler45/Gamerecordingcamera

Finally to make code run on powering up of raspberry pi, open up terminal window and type in:
sudo nano /home/pi/.config/lxsession/LXDE-pi/autostart
This will open a file, to which you should add this line at the bottom
@/usr/bin/python /home/pi/Gamerecordingcamera/multistreamcam.py
Then press Ctrl+x and y to save the file.

Your setup should now be complete. The code should run on start the next time that the raspberry pi is powered on.

However with the current code there is still expected keyboard inputs to turn the camera recording streams on and off. To use this with a server based app you would need to import necessary libraries for taking input from those sources and simply edit the lines that check Pynput, make sure that the input methods operate as interrupts to make sure they are processed promptly.
The current keyboard inputs to control the code are:
"r" to start/stop lower quality full game recording (640x480)
"n" Saves 30 second highlight reel from high quality circular buffer recording (1024,768)
"Esc" Ends the program, stops all recordings, and commences conversion of all recorded .h264 files to exportable .mp4 files

All files are saved in a new folder named with the date and time that the program was started.
